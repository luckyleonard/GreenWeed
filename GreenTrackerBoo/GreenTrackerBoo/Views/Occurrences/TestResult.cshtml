<!-- ***This is the Explore page of the website, users would be connected to this page every time
    he/she opens from navigation bar, click on the explore my area or do the search on the search bar,
    in this page, users could be given a list of search result and the distribution on the map, user
    also could interact with map and go for more information by click the plant link.***-->


@model IEnumerable<GreenTrackerBoo.Models.Occurrence>

@{
    ViewBag.Title = "TestResult";
    Layout = "~/Views/Shared/_LayoutOther.cshtml";
}

<!-- ***This section is providing the function about search invasive plants on map by postcode/address.***-->
<body>
    <div class="container" style=" margin-top: -3%;">
        <div class="col-md-6 col-md-offset-3">
            <!-- Search Form -->
            <form role="form">
                <!-- Search Field -->
                <div class="row">
                    <h1 class="text-center">Explore the Map</h1>
                    <div class="form-group">
                        <div class="input-group">
                            <input id="input" class="form-control" type="text" name="search" placeholder="Address or Postcode" onkeypress="clickPress(event)" />
                           <span class="input-group-btn">
                                <button id="submit" class="btn btn-success" type="submit">
                                        <span style="margin-left:10px;">Search</span>
                                </button>
                            </span>
                        </div>
                    </div>
                </div>
            </form>
            <!-- End of Search Form -->
        </div>
    </div>

    <!-- scripts of  function -->
    <script>
        //this function achieved when search button clicked
        function clickPress(event) {
            //when enter press, achieve search button click instead of default function
            if (event.keyCode == 13) {
                $('#submit').focus().click();
                event.preventDefault();
                
            }
        }

        //this function get the autocomplete function from google map API
        function initMap() {
            var input = document.getElementById('input');
            var options = {
                //constraint search address to Australia
                componentRestrictions: { country: 'au' }
            };

            (function pacSelectFirst(input) {
                // store the original event binding function
                var _addEventListener = (input.addEventListener) ? input.addEventListener : input.attachEvent;

                function addEventListenerWrapper(type, listener) {
                    // Simulate a 'down arrow' keypress on hitting 'return' when no pac suggestion is selected,
                    // and then trigger the original listener.
                    if (type == "keydown") {
                        var orig_listener = listener;
                        listener = function (event) {
                            var suggestion_selected = $(".pac-item-selected").length > 0;
                            if (event.which == 13 && !suggestion_selected) {
                                var simulated_downarrow = $.Event("keydown", {
                                    keyCode: 40,
                                    which: 40
                                });
                                orig_listener.apply(input, [simulated_downarrow]);
                            }

                            orig_listener.apply(input, [event]);
                        };
                    }

                    _addEventListener.apply(input, [type, listener]);
                }

                input.addEventListener = addEventListenerWrapper;
                input.attachEvent = addEventListenerWrapper;

            var autocomplete = new google.maps.places.Autocomplete(input, options);
            google.maps.event.addListener(autocomplete, 'place_changed', function () {
                var place = autocomplete.getPlace();
                document.getElementById('input1').value = place.geometry.location.lat();
                document.getElementById('input2').value = place.geometry.location.lng();
                $('#submit').focus().click();
            });
        })(input);
        }
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyB81OVqjvjWfuuaSkxjn5P95qkJfDT-u9g&libraries=places&callback=initMap" async defer></script>

    <div class="container">
        <script src='https://api.mapbox.com/mapbox.js/plugins/leaflet-markercluster/v1.0.0/leaflet.markercluster.js'></script>
        <link href='https://api.mapbox.com/mapbox.js/plugins/leaflet-markercluster/v1.0.0/MarkerCluster.css' rel='stylesheet' />
        <link href='https://api.mapbox.com/mapbox.js/plugins/leaflet-markercluster/v1.0.0/MarkerCluster.Default.css' rel='stylesheet' />
        <table class="table-responsive" style="margin-left: 5%">
            <tr style="vertical-align: top">
                <td style="width: 20%">
                    <h2>Plants Found Here:</h2>
                    <table class="table table-hover" id="table"></table>
                </td>
                <td style=" width: 1%; border-right: 2px solid #3c763d;"></td>
                <td>
                    <div id='map' style='width: 88%; height: 500px; margin-top: 1%; margin-left: 1%; margin-right: auto; overflow: hidden;'></div>
                </td>
            </tr>
        </table>
        <script>
    //api from mapbox to show the result on the map
    L.mapbox.accessToken = 'pk.eyJ1IjoiZHpodTMxIiwiYSI6ImNqMTd3OTkxbTA1bWsyd3FxN3E1ZHIzbmIifQ.gdbgSUNiTB6Ho-5I-sPlBA';
    var submit = document.getElementById('submit');

    if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(function (position) {
            //if get current location successful
            if (localStorage.getItem("storageLat") == 'null' || localStorage.getItem("storageLng") == 'null') {
                var map = L.mapbox.map('map', 'mapbox.streets').setView([position.coords.latitude, position.coords.longitude], 13);
            }
            else {
                //if user search something
                var map = L.mapbox.map('map', 'mapbox.streets').setView([localStorage.getItem("storageLat"), localStorage.getItem("storageLng")], 13);
                localStorage.setItem("storageLat", 'null');
                localStorage.setItem("storageLng", 'null');
            }
            var markerClick;
            markerClick = L.marker([position.coords.latitude, position.coords.longitude]);
            var popupContent = '<div>' +
                               '<h2 style= "text-align:center">' + "You're Here" + '</h2>'
                               + '<div>'
            markerClick.bindPopup(popupContent);
            markerClick.addTo(map);

            var markers = new L.MarkerClusterGroup();
            map.on('ready', function () {
                @foreach (var item in Model)
                   {

                      <text>
                //return the plant name on a arraylist               
                var title = '@item.Plant.CommonName';
                var link = '@item.Plant.PageLink'
                var marker = L.marker(new L.LatLng('@item.Latitude', '@item.Longitude'),
                {
                    icon: L.icon({ iconUrl: '@item.Plant.iconPic', iconSize: [30, 30] }),
                    title: title
                });
                var popupContent = '<div>' +
                '<h2 style= "text-align:center">' + title + '</h2>'
                + '<div>' + '<img src="@item.Plant.iconPic"  style = "width:200px"/>' + '</div>'
                + '<div>' + '<a href="@item.Plant.PageLink" target="_blank">' + 'Detail</a>' + '</div>'
                + '<div>' + '<a href="@Url.Action("Report", "Home")">' + 'Report</a>' + '</div>'
                + '</div>'
                marker.bindPopup(popupContent);
                markers.addLayer(marker);
                </text>
                  }

                map.addLayer(markers);

                var inBounds = [],
                   // Get the map bounds - the top-left and bottom-right locations.
                   bounds = map.getBounds();

                // For each marker, consider whether it is currently visible by comparing
                // with the current map bounds.
                markers.eachLayer(function (marker) {
                    if (bounds.contains(marker.getLatLng())) {
                        inBounds.push(marker.options.title)
                    }

                });

                // Display a list of markers to table.
                var table = document.getElementById("table");  // set this to your table
                var thead = document.createElement("thead");
                var tbody = document.createElement("tbody");
                var headrow = document.createElement("tr");
                var th = document.createElement("th");
                th.textContent = "(Click for fact sheet)";
                headrow.appendChild(th);
                thead.appendChild(headrow);
                table.appendChild(thead);

                table.appendChild(tbody);
                table.appendChild(thead);

                if (inBounds.length > 0) {
                    inBounds.unique().forEach(function (item) {
                        var row = document.createElement("tr");
                        var cell = document.createElement("td");
                        var la = document.createElement("a");
                        la.text = "-" + item;
                        var link = getLink(item);
                        la.href = link;
                        la.target = "_blank";
                        cell.appendChild(la);
                        row.appendChild(cell);
                        tbody.appendChild(row);
                    });
                }
                else {
                    var row = document.createElement("tr");
                    var cell = document.createElement("td");
                    cell.textContent = "**Currently no invasive plants records here**"
                    row.appendChild(cell);
                    tbody.appendChild(row);
                }
                var larow = document.createElement("tr");
                var lacell = document.createElement("td");
                var la= document.createElement("a");
                la.href="@Url.Action("Library", "Home")";
                la.target = "_blank";
                la.text = "Click here to check Invasive plant library";
                la.style = "color:#df1e37;"
                lacell.appendChild(la);
                larow.appendChild(lacell);
                tbody.appendChild(larow);
                table.appendChild(tbody);

                map.on('move', function () {
                    // Construct an empty list to fill with onscreen markers.
                    var inBounds = [],
                    // Get the map bounds - the top-left and bottom-right locations.
                    bounds = map.getBounds();

                    // For each marker, consider whether it is currently visible by comparing
                    // with the current map bounds.
                    markers.eachLayer(function (marker) {
                        if (bounds.contains(marker.getLatLng())) {
                            inBounds.push(marker.options.title)
                        }

                    });

                    // Display a list of markers into table.
                    var table = document.getElementById("table");  // set this to your table
                    table.innerHTML = "";
                    var tbody = document.createElement("tbody");
                    var thead = document.createElement("thead");
                    var headrow = document.createElement("tr");
                    var th = document.createElement("th");
                    th.textContent = "(Click for fact sheet)";
                    headrow.appendChild(th);
                    thead.appendChild(headrow);
                    table.appendChild(thead);

                    table.appendChild(tbody);
                    table.appendChild(thead);

                    if (inBounds.length > 0) {
                        inBounds.unique().forEach(function (item) {
                            var row = document.createElement("tr");
                            var cell = document.createElement("td");
                            var la = document.createElement("a");
                            la.text = "-"+item;
                            var link = getLink(item);
                            la.href = link;
                            la.target = "_blank";
                            cell.appendChild(la);
                            row.appendChild(cell);
                            tbody.appendChild(row);
                        });
                    }
                    else {
                        var row = document.createElement("tr");
                        var cell = document.createElement("td");
                        cell.textContent = "**Currently no invasive plants records here**"
                        row.appendChild(cell);
                        tbody.appendChild(row);
                    }
                    var larow = document.createElement("tr");
                    var lacell = document.createElement("td");
                    var la= document.createElement("a");
                    la.href="@Url.Action("Library", "Home")";
                    la.target = "_blank";
                    la.text = "Click here to check all Plant Library";
                    la.style = "color:#df1e37;"
                    lacell.appendChild(la);
                    larow.appendChild(lacell);
                    tbody.appendChild(larow);
                    table.appendChild(tbody);
                });

                submit.onclick = function (e) {
                    e.preventDefault();
                    var lat1 = document.getElementById('input1').value;
                    var lng1 = document.getElementById('input2').value;
                    map.setView([lat1, lng1], 13);

                };
            });

            //detect the error when get current loction funciton failed
        }, function (error) {
            switch (error.code) {
                case error.PERMISSION_DENIED:
                    alert("user did not share geolocation data");
                    break;
                case error.POSITION_UNAVAILABLE:
                    alert("could not detect current position");
                    break;
                case error.TIMEOUT:
                    alert("retrieving position timed out");
                    break;
                default:
                    alert("unknown error");
                    break;
            }
        });
    }



    //get unique value function
    Array.prototype.unique = function () {
        var res = [];
        var json = {};
        for (var i = 0; i < this.length; i++) {
            if (!json[this[i]]) {
                res.push(this[i]);
                json[this[i]] = 1;
            }
        }
        return res;
    }

    //retrieve links
    function getLink(commonName){
        var commonNameLink = commonName.replace(/\s+/g, '');
        var link = "https://greentracker.azurewebsites.net/Plants/" + commonNameLink;
        return link;
    }

    //remove the active class from Home to this page
    $(document).ready(function () {
        $("ul li").removeClass("active");
        $('#exploreTag').addClass("active");
    });
        </script>
    </div>
    <div>
        <input id="input1" class="form-control" type="text" name="search" placeholder="Latitude" style="visibility: hidden; height: 0px" />
        <input id="input2" class="form-control" type="text" name="search" placeholder="Longitude" style="visibility: hidden; height: 0px" /></div>
</body>

